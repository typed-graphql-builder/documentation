"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[380],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=o,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2459:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={title:"Graphql Request"},i=void 0,l={unversionedId:"clients/graphql-request",id:"clients/graphql-request",title:"Graphql Request",description:"GraphQL Request is a minimal and lightweight GraphQL client that comes as a native ES6 module and has first class TypeScript support.",source:"@site/docs/clients/graphql-request.md",sourceDirName:"clients",slug:"/clients/graphql-request",permalink:"/docs/clients/graphql-request",draft:!1,editUrl:"https://github.com/typed-graphql-builder/documentation/tree/main/docs/docs/clients/graphql-request.md",tags:[],version:"current",frontMatter:{title:"Graphql Request"},sidebar:"tutorialSidebar",previous:{title:"Apollo",permalink:"/docs/clients/apollo"},next:{title:"urql",permalink:"/docs/clients/urql"}},s={},c=[],p={toc:c};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"GraphQL Request is a minimal and lightweight GraphQL client that comes as a native ES6 module and has first class TypeScript support."),(0,o.kt)("p",null,"Among other things, its a convenient way to send GraphQL queries from Node."),(0,o.kt)("p",null,"Here is a simple node.js example utilizing ES6 syntax:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'// The below line is not a mistake\n// TS will use the correct extension for types\nimport { query } from "./generated-api.js"; \nimport { GraphQLClient } from "graphql-request";\n\nconst countriesQuery = query((q) => [\n  q.countries((c) => [c.name({ lang: "en" }), c.capital, c.code]),\n]);\n\nconst endpoint = "https://countries.trevorblades.com/";\nconst client = new GraphQLClient(endpoint);\n\nconst main = async function main() {\n  let response = await client.request(countriesQuery);\n  console.log(response.countries);\n};\n')))}u.isMDXComponent=!0}}]);