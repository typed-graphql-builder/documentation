"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[49],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,y=d["".concat(p,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(y,i(i({ref:t},s),{},{components:n})):r.createElement(y,i({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1130:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={title:"Apollo"},i=void 0,l={unversionedId:"clients/apollo",id:"clients/apollo",title:"Apollo",description:"typed-graphql-builder can easily be used with Apollo Client by substituting the gql function",source:"@site/docs/clients/apollo.md",sourceDirName:"clients",slug:"/clients/apollo",permalink:"/docs/clients/apollo",draft:!1,editUrl:"https://github.com/typed-graphql-builder/documentation/tree/main/docs/docs/clients/apollo.md",tags:[],version:"current",frontMatter:{title:"Apollo"},sidebar:"tutorialSidebar",previous:{title:"Clients",permalink:"/docs/category/clients"},next:{title:"Relay",permalink:"/docs/clients/relay"}},p={},c=[],s={toc:c};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"typed-graphql-builder")," can easily be used with Apollo Client by substituting the ",(0,o.kt)("inlineCode",{parentName:"p"},"gql")," function\nthat comes with it. Instead of using ",(0,o.kt)("inlineCode",{parentName:"p"},"gql")," and passing it a query string:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const ADD_TODO = gql`\n  mutation AddTodo($type: String!) {\n    addTodo(type: $type) {\n      id\n      type\n    }\n  }\n`\n")),(0,o.kt)("p",null,"we can use ",(0,o.kt)("inlineCode",{parentName:"p"},"typed-graphql-builder"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import { mutation } from "./generated-api"\n\nconst ADD_TODO = mutation(m => [\n  m.addTodo({ type: $("type") }, todo => [\n    //\n    todo.id,\n    todo.type,\n  ]),\n])\n')),(0,o.kt)("p",null,"The type of the variable will be automatically inferred as ",(0,o.kt)("inlineCode",{parentName:"p"},"string")," for us."),(0,o.kt)("p",null,"The mutation can then be used in a component as usual. We can pass additional variables at the\npoint of use:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'function AddTodo() {\n  const [todo, setTodo] = useState("")\n  const [addTodo, { data, loading, error }] = useMutation(ADD_TODO)\n\n  if (loading) return "Submitting..."\n  if (error) return `Submission error! ${error.message}`\n\n  return (\n    <div>\n      <form\n        onSubmit={e => {\n          e.preventDefault()\n          addTodo({ variables: { type: todo } })\n          setTodo("")\n        }}\n      >\n        <input value={todo} onChange={e => setTodo(e.target.value)} />\n        <button type="submit">Add Todo</button>\n      </form>\n    </div>\n  )\n}\n')))}u.isMDXComponent=!0}}]);