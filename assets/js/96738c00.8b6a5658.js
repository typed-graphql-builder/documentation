"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[298],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>y});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),y=a,m=d["".concat(c,".").concat(y)]||d[y]||u[y]||o;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8209:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={title:"Aliases"},i=void 0,s={unversionedId:"query-syntax/aliases",id:"query-syntax/aliases",title:"Aliases",description:"Aliases are supported via the .as method - any field (including methods) can be renamed by",source:"@site/docs/query-syntax/aliases.md",sourceDirName:"query-syntax",slug:"/query-syntax/aliases",permalink:"/docs/query-syntax/aliases",draft:!1,editUrl:"https://github.com/typed-graphql-builder/documentation/tree/main/docs/docs/query-syntax/aliases.md",tags:[],version:"current",frontMatter:{title:"Aliases"},sidebar:"tutorialSidebar",previous:{title:"Query Syntax",permalink:"/docs/category/query-syntax"},next:{title:"Fields and field helpers",permalink:"/docs/query-syntax/fields"}},c={},l=[],p={toc:l};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Aliases are supported via the ",(0,a.kt)("inlineCode",{parentName:"p"},".as")," method - any field (including methods) can be renamed by\nusing ",(0,a.kt)("inlineCode",{parentName:"p"},'.as("newName")')),(0,a.kt)("p",null,"The following example assumes there is a ",(0,a.kt)("inlineCode",{parentName:"p"},"country")," method at the toplevel query which fetches\na country by its code. We need to fetch two countries for a comparison"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'let compareCountriesQuery = query(q => [\n  q.country({ code: $("code1") }, c => [c.name, c.capital]).as("first"),\n  q.country({ code: $("code2") }, c => [c.name, c.capital]).as("second"),\n])\n')),(0,a.kt)("p",null,"The response will have two properties: ",(0,a.kt)("inlineCode",{parentName:"p"},"first")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"second"),", each containing a country"))}u.isMDXComponent=!0}}]);