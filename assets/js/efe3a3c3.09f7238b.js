"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[382],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=o,y=d["".concat(s,".").concat(m)]||d[m]||c[m]||a;return n?r.createElement(y,i(i({ref:t},p),{},{components:n})):r.createElement(y,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8630:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const a={title:"urql"},i=void 0,l={unversionedId:"clients/urql",id:"clients/urql",title:"urql",description:"urql is a highly customizable and versatile GraphQL client with which you add on features like normalized caching as you grow. It's built to be both easy to use for newcomers to GraphQL, and extensible, to grow to support dynamic single-app applications and highly customized GraphQL infrastructure. In short, urql prioritizes usability and adaptability.",source:"@site/docs/clients/urql.md",sourceDirName:"clients",slug:"/clients/urql",permalink:"/docs/clients/urql",draft:!1,editUrl:"https://github.com/typed-graphql-builder/documentation/tree/main/docs/docs/clients/urql.md",tags:[],version:"current",frontMatter:{title:"urql"},sidebar:"tutorialSidebar",previous:{title:"Relay",permalink:"/docs/clients/relay"},next:{title:"Query Syntax",permalink:"/docs/category/query-syntax"}},s={},u=[],p={toc:u};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("a",{parentName:"p",href:"https://formidable.com/open-source/urql/docs/"},"urql")," is a highly customizable and versatile GraphQL client with which you add on features like normalized caching as you grow. It's built to be both easy to use for newcomers to GraphQL, and extensible, to grow to support dynamic single-app applications and highly customized GraphQL infrastructure. In short, ",(0,o.kt)("inlineCode",{parentName:"p"},"urql")," prioritizes usability and adaptability.")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"typed-graphql-builder")," works with urql's bindings in addition to the core node.js architecture. Anywhere you might have used a GraphQL string or ",(0,o.kt)("inlineCode",{parentName:"p"},"DocumentNode")," object, you can easily\nreplace these with the generated objects from ",(0,o.kt)("inlineCode",{parentName:"p"},"typed-graphql-builder")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Before:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const GET_TODOS = `\n  query GetTodos {\n    todos {\n      id\n      type\n    }\n  }\n`\n\nconst ADD_TODO = `\n  mutation AddTodo($type: String!) {\n    addTodo(type: $type) {\n      id\n      type\n    }\n  }\n`\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"After ",(0,o.kt)("inlineCode",{parentName:"strong"},"typed-graphql-builder"),":")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { query, mutation } from "./generated-api"\n\nconst GET_TODOS = query(q => [\n  q.todos(todo => [\n    // ...\n    todo.id,\n    todo.type,\n  ]),\n])\n\nconst ADD_TODO = mutation(m => [\n  m.addTodo({ type: $("type") }, todo => [\n    // ...\n    todo.id,\n    todo.type,\n  ]),\n])\n')),(0,o.kt)("p",null,"The type of the variable ",(0,o.kt)("inlineCode",{parentName:"p"},'$("type")')," will be automatically inferred as ",(0,o.kt)("inlineCode",{parentName:"p"},"string")," for us. We can then pass these query and mutation objects into urql directly:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'function ComponentWithTodos() {\n  const [{ data }] = useQuery({\n    query: GET_TODOS,\n  })\n}\n\nfunction AddTodo() {\n  const [todo, setTodo] = useState("")\n  const [{ fetching, error }, addTodo] = useMutation(ADD_TODO)\n\n  if (fetching) return "Submitting..."\n  if (error) return `Submission error! ${error.message}`\n\n  return (\n    <div>\n      <form\n        onSubmit={e => {\n          e.preventDefault()\n          void addTodo({ type: todo })\n          setTodo("")\n        }}\n      >\n        <input value={todo} onChange={e => setTodo(e.target.value)} />\n        <button type="submit">Add Todo</button>\n      </form>\n    </div>\n  )\n}\n')))}c.isMDXComponent=!0}}]);